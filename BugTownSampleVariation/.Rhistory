View(np)
str_match(np$ContingentFac, "adjunct|instructor|visiting")
str_match_all(np$ContingentFac, "adjunct|instructor|visiting")
str_flatten(str_match_all(np$ContingentFac, "adjunct|instructor|visiting"))
mutate(np, cf = str_match_all(ContingentFac, "adjunt|visiting|instructor"))
select(np, Peaks, Minor, ContingentFac) %>% mutate( cf = str_match_all(ContingentFac, "adjunt|visiting|instructor"))
select(np, Peaks, Minor, ContingentFac) %>% filter(str_detect(ContingentFac, "Yes"))%>%mutate( cf = str_match_all(ContingentFac, "adjunt|visiting|instructor"))
select(np, Peaks, Minor, ContingentFac) %>% filter(str_detect(ContingentFac, "Yes"))%>%mutate( cf = str_match_all(ContingentFac, "adjunt|visiting|instructor"))%>%View()
select(np, Peaks, Minor, ContingentFac) %>% filter(str_detect(ContingentFac, "Yes"))%>%mutate( cf = str_match_all(ContingentFac, "adjunts|visiting|instructor"))%>%View()
select(np, Peaks, Minor, ContingentFac) %>% filter(str_detect(ContingentFac, "Yes"))%>%mutate( cf = str_match_all(ContingentFac, "adjuncts|visiting|instructor"))%>%View()
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
View(tg)
strftime(tg$time[1], format="%H:%M")
strftime(tg$time[1], format="%H:%M %I")
strftime(tg$time[1], format="%H:%M %p")
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
?ungroup
runApp('github-web/CofI-Shiny/Course_Time')
?strftime
runApp('github-web/CofI-Shiny/Course_Time')
lubridate::hm(tg$time[1])
tg$time[1]
?hm
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
head(tg)
ave(tg$crs.cnt, tg$SE)
ave(tg$crs.cnt, tg$SE, FUN = cumsum)
?rle
tg$avt <- ave(tg$crs.cnt, tg$SE, FUN = cumsum)
tg$avt <- ifelse(tg$SE=="Start.Time", tg$avt, -1*tg$avt)
head(tg)
ggplot(tg, aes(x=time, y=avt, col=Division))+geom_line()
tg$avt <- ave(tg$crs.cnt, tg$SE, tg$Division, FUN = function(x) cumsum(ifelse(tg$SE=="Start.Time", x, -1*x)))
tg$avt <- ave(tg$crs.cnt, tg$SE, tg$Division, FUN = cumsum)
head(tg)
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
View(Teagle.cleaned.flat.non.blank)
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
runApp('github-web/CofI-Shiny/Course_Time')
View(np)
library(dplyr)
library(tidyr)
library(ggplot2)
library(readxl)
library(stringr)
library(DT)
np_raw<-read_excel("Navigating PEAK_ Minor Data Collection(1-60).xlsx", col_names = FALSE, skip = 1)
np_raw<-read_excel("Navigating PEAK_ Minor Data Collection(1-60).xlsx", col_names = FALSE, skip = 1)
np <- select(np_raw, c(4:24))
names(np) <- c("Navigator", "Minor", "Peaks", "Buckets", "Min.Chain", "Structure", "RequiredCrsYN", "ReqType", "Gateway", "Bridge", "Terminal", "ReqCrsList", "MajorRelation", "MajorSat", "Twins", "Credits", "Prereq", "ProfCnt", "ContingentFac", "NumSemester", "Comments")
np$Buckets <- as.numeric(str_extract(np$Buckets, "[:digit:]"))
np$Min.Chain <- as.numeric(str_extract(np$Min.Chain, "[:digit:]"))
np$Structure <- str_split(np$Structure, "ly[:space:]", simplify=TRUE)[,1]
np$Credits <- as.numeric(str_extract(np$Credits, "[:digit:]{2}"))
np$NumSemester <- str_remove(np$NumSemester, " Semester.")
np$NumSemester <- ifelse(np$NumSemester=="One", 1,
ifelse(np$NumSemester=="Two", 2,
ifelse(np$NumSemester=="Three", 3,
ifelse(np$NumSemester=="Four", 4,
ifelse(np$NumSemester=="Five", 5, 6)
))))
reqCourses <- np %>% select(ReqCrsList, Minor) %>%
filter(!is.na(ReqCrsList))
ReqCrsList2 <- str_extract_all(reqCourses$ReqCrsList, "[:upper:]{3,6}[-| ][:digit:]{3}", simplify = TRUE)
rc <- data.frame(Minor = reqCourses$Minor, ReqCrsList2) %>% gather(key=bogus, value=Course, -Minor) %>% select(Minor, Course) %>% filter(Course!="") %>% mutate(Course = str_replace(Course, " ", "-"))
View(rc)
enrollHist <- read.csv("Teagle-cleaned-flat-non-blank.csv", header=TRUE)
View(enrollHist)
enrollHist <- read.csv("Teagle-cleaned-flat-non-blank.csv",
header=TRUE) %>%
select(Course=Crs.Name, Faculty=Sec.Faculty.Sort.Name, Year, Semester, Enroll.Cap, Enrolled, Days) %>%
mutate(Year = ifelse(Semester == "FA", Year+1, Year)) %>%
group_by(Course, Year, Semester) %>%
summarise(Enroll.Cap = sum(Enroll.Cap), Enrolled = sum(Enrolled), Faculty = str_flatten(Faculty, collapse=", "), Days = str_flatten(Days, collapse=", "))
rcf <- inner_join(rc, enrollHist, by="Course")
View(rcf)
rcf %>% group_by(Minor, Course) %>% top_n(2)
rcf %>% group_by(Minor, Course) %>% top_n()
rcf %>% group_by(Minor, Course) %>% top_n(Year, 2)
?top_n
rcf %>% group_by(Minor, Course) %>% top_n(2,Year)
rcf %>% group_by(Minor, Course) %>% top_n(3,Year)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, error = FALSE)
library(dplyr)
library(tidyr)
library(ggplot2)
library(readxl)
library(stringr)
library(DT)
np_raw<-read_excel("Navigating PEAK_ Minor Data Collection(1-60).xlsx", col_names = FALSE, skip = 1)
np <- select(np_raw, c(4:24))
names(np) <- c("Navigator", "Minor", "Peaks", "Buckets", "Min.Chain", "Structure", "RequiredCrsYN", "ReqType", "Gateway", "Bridge", "Terminal", "ReqCrsList", "MajorRelation", "MajorSat", "Twins", "Credits", "Prereq", "ProfCnt", "ContingentFac", "NumSemester", "Comments")
np$Buckets <- as.numeric(str_extract(np$Buckets, "[:digit:]"))
np$Min.Chain <- as.numeric(str_extract(np$Min.Chain, "[:digit:]"))
np$Structure <- str_split(np$Structure, "ly[:space:]", simplify=TRUE)[,1]
np$Credits <- as.numeric(str_extract(np$Credits, "[:digit:]{2}"))
np$NumSemester <- str_remove(np$NumSemester, " Semester.")
np$NumSemester <- ifelse(np$NumSemester=="One", 1,
ifelse(np$NumSemester=="Two", 2,
ifelse(np$NumSemester=="Three", 3,
ifelse(np$NumSemester=="Four", 4,
ifelse(np$NumSemester=="Five", 5, 6)
))))
reqCourses <- np %>% select(ReqCrsList, Minor) %>%
filter(!is.na(ReqCrsList))
ReqCrsList2 <- str_extract_all(reqCourses$ReqCrsList, "[:upper:]{3,6}[-| ][:digit:]{3}", simplify = TRUE)
rc <- data.frame(Minor = reqCourses$Minor, ReqCrsList2) %>% gather(key=bogus, value=Course, -Minor) %>% select(Minor, Course) %>% filter(Course!="") %>% mutate(Course = str_replace(Course, " ", "-"))
enrollHist <- read.csv("Teagle-cleaned-flat-non-blank.csv",
header=TRUE) %>%
select(Course=Crs.Name, Faculty=Sec.Faculty.Sort.Name, Year, Semester, Enroll.Cap, Enrolled, Days) %>%
mutate(Year = ifelse(Semester == "FA", Year+1, Year)) %>%
group_by(Course, Year, Semester) %>%
summarise(Enroll.Cap = sum(Enroll.Cap), Enrolled = sum(Enrolled), Faculty = str_flatten(Faculty, collapse=", "), Days = str_flatten(Days, collapse=", "))
rcf <- inner_join(rc, enrollHist, by="Course")
mc <- read.csv("minor-courses-mentioned-1819.csv", header=TRUE)
View(mc)
mcf <- inner_join(mc, enrollHist, by="Course")
mc <- read.csv("minor-courses-mentioned-1819.csv", header=TRUE) %>%
mutate(Course = paste0(sub, "-",number)) %>% select(-url)
mcf <- inner_join(mc, enrollHist, by="Course")
View(mcf)
mmhc <- read.csv("~/github-web/peak-neo4j/misc/maps-minor-historical-cleaned.csv")
View(mmhc)
devtools::install_github("mattflor/chorddiag")
library(chorddiag)
mmhc2 <- select(mmhc,-Major2)
xtabs(~Major1+Minor1+Minor2+Minor3, data=mmhc2)
xtabs(~Major1+Minor1+Minor2+Minor3, data=mmhc2, drop.unused.levels = TRUE) %>% as.matrix() -> mmhcMat
dim(mmhcMat)
mmhcMat[1,1]
mmhcMat[1,]
mmhcMat[,1]
xtabs(~Major1+Minor1+Minor2+Minor3, data=mmhc2, drop.unused.levels = TRUE) -> mmhcTab
mmhcTab[1,1]
mmhcTab[1]
mmhcTab[1,]
mmhcTab[,1]
mmhcTab[2]
mmhcTab
dims(mmhcTab)
names(mmhcTab)
chorddiag(mmhcTab)
chorddiag(mmhcMat)
xtabs(~Major1+Minor1, data=mmhc2) %>% as.matrix() -> mmhcMat1
chorddiag(mmhcMat1)
dims(mmhcMat1)
dim(mmhcMat1)
chorddiag(mmhcMat1, type = "bipartite")
?layout
knitr::opts_chunk$set(echo = TRUE)
mmhc <- read.csv("~/github-web/peak-neo4j/misc/maps-minor-historical-cleaned.csv")
devtools::install_github("mattflor/chorddiag")
majMin <- select(mmhc, Major1, Minor1)
mmMat <- xtabs(~Major1+Minor1, data=majMin, drop.unused.levels = TRUE)
layout(matrix(1:6, 3,2))
for(i in 2012:2017){
mmhatY <- xtabs(~Major1+Minor1, data=majMin[majMin$Year==i,], drop.unused.levels = TRUE)
chorddiag(mmhatY, type="bipartite")
}
majMin <- select(mmhc, Major1, Minor1, Year)
majMin <- select(mmhc, Major1, Minor1, Grad.Year)
layout(matrix(1:6, 3,2))
for(i in 2012:2017){
mmhatY <- xtabs(~Major1+Minor1, data=majMin[majMin$Grad.Year==i,], drop.unused.levels = TRUE)
chorddiag(mmhatY, type="bipartite")
}
?chorddiag
View(mmhc2)
mmhc3 <- gather(mmhc2, key=Num, value=Minor, id=c(Grad.Year, Degree, Major1, Concentration))
View(mmhc3)
?gather
mmhc3 <- gather(mmhc2, key=Num, value=Minor, -c(Grad.Year, Degree, Major1, Concentration))
chorddiag(xtabs(~Major1+Minor, data=mmhc3, drop.unused.levels = TRUE), type="bipartite")
chorddiag(xtabs(~Major1+Minor, data=mmhc3[mmhc3$Grad.Year==2017,], drop.unused.levels = TRUE), type="bipartite")
mmhc3 <- rename(mmhc3, MAJOR= Major1, minor = Minor) %>% mutate(minor=str_to_lower(minor))
chorddiag(xtabs(~MAJOR+minor, data=mmhc3[mmhc3$Grad.Year==2017,], drop.unused.levels = TRUE), type="bipartite")
chorddiag(xtabs(~MAJOR+minor, data=mmhc3[mmhc3$Grad.Year==2017,], drop.unused.levels = TRUE), showTicks=FALSE, type="bipartite")
m317tab <-xtabs(~MAJOR+minor, data=mmhc3[mmhc3$Grad.Year==2017,], drop.unused.levels = TRUE)
m317tab
unique(mmhc3$minor)
mmhc3 <- mutate(mmhc3, minor = str_trim(minor, side="both"))
chorddiag(xtabs(~MAJOR+minor, data=mmhc3[mmhc3$Grad.Year==2017,], drop.unused.levels = TRUE), showTicks=FALSE, type="bipartite")
library(RColorBrewer)
n <- 60
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
pie(rep(1,n), col=sample(col_vector, n))
col_vector
chorddiag(xtabs(~MAJOR+minor, data=mmhc3[mmhc3$Grad.Year==2017,], drop.unused.levels = TRUE), showTicks=FALSE, type="bipartite", groupColors = col_vector)
chorddiag(xtabs(~MAJOR+minor, data=mmhc3[mmhc3$Grad.Year==2016,], drop.unused.levels = TRUE), showTicks=FALSE, type="bipartite", groupColors = col_vector)
setwd("~/github-web/jpreszler/")
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
runApp('~/github-web/CofI-Shiny/Course_Time')
blogdown::stop_server()
runApp('~/github-web/CofI-Shiny/Course_Time')
runApp('~/github-web/CofI-Shiny/Course_Time')
runApp('~/github-web/CofI-Shiny/Course_Time')
runApp('~/github-web/CofI-Shiny/Course_Time')
runApp('~/github-web/CofI-Shiny/Course_Time')
runApp('~/github-web/CofI-Shiny/Course_Time')
runApp('~/github-web/CofI-Shiny/Course_Time')
runApp('~/github-web/CofI-Shiny/Course_Time')
runApp('~/github-web/CofI-Shiny/Course_Time')
runApp('~/github-web/CofI-Shiny/Course_Time')
runApp('~/github-web/CofI-Shiny/Course_Time')
runApp('~/github-web/CofI-Shiny/Course_Time')
View(mmhc)
unique(mmhc$Major1)
unique(mmhc$Minor1)
runApp('~/github-web/CofI-Shiny/Course_Time')
numRSVP <- 8
seq(from=1, to=numRSVP, by=2)
7/2
seq(from=1, to=numRSVP-1, by=2)
seq(from=1, length.out = numRSVP/2, by=2)
seq(from=1, length.out = (numRSVP-1)/2, by=2)
library(readxl)
full <- read_excel("~/github-web/CofI-Shiny/March_Order/full.xlsx")
View(full)
library(readxl)
full <- read_excel("~/github-web/CofI-Shiny/March_Order/full.xlsx",
skip = 1)
View(full)
full[117,]
full[117,2]=="David"
full[117,3]=="Lavigne"
library(readxl)
rsvp <- read_excel("~/Downloads/2018 College of Idaho Convocation Ceremonya.xlsx")
View(rsvp)
install.packages("freqparcoord")
library(freqparcoord)
data(mlb)
head(mlb)
mlb %>% group_by(Height) %>% summarise(muhat = mean(Weight))
ggplot(mlb, aes(x=Height, y=Weight))+geom_point()
mlb %>% group_by(Height) %>% summarise(muhat = mean(Weight), n=n(), stddev = sd(Weight))
mlb %>% group_by(Height) %>% summarise(muhat = mean(Weight), n=n(), stddev = sd(Weight), low=muhat-1.96*stddev/sqrt(n), high = muhat+1.96*stddev/sqrt(n)) _> mlbEst
mlb %>% group_by(Height) %>% summarise(muhat = mean(Weight), n=n(), stddev = sd(Weight), low=muhat-1.96*stddev/sqrt(n), high = muhat+1.96*stddev/sqrt(n)) -> mlbEst
ggplot()+geom_point(mlb, aes(x=Height, y=Weight), color="black")+geom_point(mlbEst, aes(x=Height, y=muhat), color="red", shape=3)
ggplot()+geom_point(data=mlb, aes(x=Height, y=Weight), color="black")+geom_point(data=mlbEst, aes(x=Height, y=muhat), color="red", shape=3)
ggplot()+geom_point(data=mlb, aes(x=Height, y=Weight), color="black")+geom_point(data=mlbEst, aes(x=Height, y=muhat), color="red", shape=2)
ggplot()+geom_point(data=mlb, aes(x=Height, y=Weight), color="black")+geom_point(data=mlbEst, aes(x=Height, y=muhat), color="red", shape=4)
ggplot()+geom_point(data=mlb, aes(x=Height, y=Weight), color="black")+geom_point(data=mlbEst, aes(x=Height, y=muhat), color="red", shape=5)
ggplot()+geom_point(data=mlb, aes(x=Height, y=Weight), color="black", alpha  = .3)+geom_point(data=mlbEst, aes(x=Height, y=muhat), color="red", shape=5)
ggplot()+geom_point(data=mlb, aes(x=Height, y=Weight), color="black", alpha  = .3)+geom_point(data=mlbEst, aes(x=Height, y=muhat), color="red", shape=6)
ggplot()+geom_point(data=mlb, aes(x=Height, y=Weight), color="black", alpha  = .3)+geom_point(data=mlbEst, aes(x=Height, y=muhat), color="red", shape=7)
?geom_ribbon
JPreszler_Program.Review.Historic.Grads.for.selected.majors_ALL_082518 <- read.csv("~/Downloads/JPreszler_Program Review Historic Grads for selected majors_ALL_082518.csv")
View(JPreszler_Program.Review.Historic.Grads.for.selected.majors_ALL_082518)
cdf <- JPreszler_Program.Review.Historic.Grads.for.selected.majors_ALL_082518 %>%
select(Grad.Year, Major.1.Major.2.Major.3, Minor.1.Minor.2.Minor.3) %>%
separate(Major.1.Major.2.Major.3, into = c("Major1","Major2","Major3"), sep=", ") %>%
separate(Minor.1.Minor.2.Minor.3, into = c("Minor1", "Minor2", "Minor3"), sep = ", ")
View(cdf)
cdf <- JPreszler_Program.Review.Historic.Grads.for.selected.majors_ALL_082518 %>%
select(Grad.Year, Major.1.Major.2.Major.3, Minor.1.Minor.2.Minor.3) %>%
separate(Major.1.Major.2.Major.3, into = c("Major1","Major2","Major3"), sep=", ") %>%
separate(Minor.1.Minor.2.Minor.3, into = c("Minor1", "Minor2", "Minor3"), sep = ", ") %>%
filter(Grad.Year >2012)
cdf$Minor1 <- str_replace(cdf$Minor1, "[:blank:]", "NA")
View(cdf)
cdf$Minor1 <- str_replace(cdf$Minor1, "", "NA")
unique(cdf$Major3)
#write out
write.csv(cdf, "maj-min-cleaned-2013.csv", row.names = FALSE)
mmhc <- read.csv("~/gitlab/peak-nav/maj-min-cleaned-2013.csv")
#write out
write.csv(cdf, "~/gitlab/peak-nav/maj-min-cleaned-2013.csv", row.names = FALSE)
mmhc <- read.csv("~/gitlab/peak-nav/maj-min-cleaned-2013.csv")
majMin <- select(mmhc, Major1, Major2, Major3, Minor1, Minor2, Minor3, Grad.Year) %>%
gather(key=MajNum, value = MAJOR, -c(Minor1,Minor2, Minor3, Grad.Year)) %>% select(-MajNum) %>%
gather(key=MinorNum, value=minor, -c(MAJOR, Grad.Year)) %>%
select(-MinorNum) %>%
mutate(MAJOR = str_trim(MAJOR, side="both"), minor = str_to_lower(str_trim(minor, side="both")))
unique(majMin$MAJOR)
unique(majMin$minor)
xtabs(~minor+Grad.Year, data=majMin)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
data(mlb)  #puts MLB dataset into environment
ggplot(mlb, aes(x=Height, y=Weight))+geom_boxplot()
ggplot(mlb, aes(x=Height, y=Weight, group=Height))+geom_boxplot()
#get data
bugtownDF <- read.csv("data.org", sep="|", header=TRUE, strip.white = TRUE)
setwd("~/github-web/CofI-Shiny/BugTownSampleVariation/")
#get data
bugtownDF <- read.csv("data.org", sep="|", header=TRUE, strip.white = TRUE)
View(bugtownDF)
areas <- bugtownDF %>% group_by(apartNumber) %>% summarise(area=max(area))
#read, split, and reshape example data
bugSampDF <- read.csv("example.csv", header=TRUE) %>%
separate(samp, into = paste0("n",1:5), sep=",", remove=TRUE) %>%
gather(key="n",value="Apt", -c(id,method) ) %>%
select(-n) %>% mutate(term="ex")
View(bugSampDF)
?left_join()
View(areas)
unique(areas$area)
runApp()
?geom_histogram
runApp()
runApp()
?scale_x_discrete
?scale_x_continuous
runApp()
runApp()
View(majMin)
unique(majMin$MAJOR)
unique(majMin$minor)
xtabs(~minor+Grad.Year, data=majMin)
install.packages("regtools")
?install.packages
install.packages(c("DALEX", "ModelMetrics", "RCurl", "RcppArmadillo", "blogdown", "broom", "caTools", "cowplot", "digest", "e1071", "git2r", "glue", "httpuv", "igraph", "ipred", "iterators", "kernlab", "lava", "openssl", "pillar", "pkgconfig", "pls", "questionr", "reticulate", "rlang", "robustbase", "scales", "spData", "spdep", "stringi", "tinytex", "tm", "wordcloud", "yaImpute", "yaml"))
install.packages(c("DALEX", "ModelMetrics", "RCurl", "RcppArmadillo", "blogdown", "broom", "caTools", "cowplot", "digest", "e1071", "git2r", "glue", "httpuv", "igraph", "ipred", "iterators", "kernlab", "lava", "openssl", "pillar", "pkgconfig", "pls", "questionr", "reticulate", "rlang", "robustbase", "scales", "spData", "spdep", "stringi", "tinytex", "tm", "wordcloud", "yaImpute", "yaml"))
install.packages(c("DALEX", "ModelMetrics", "RCurl", "RcppArmadillo", "blogdown", "broom", "caTools", "cowplot", "digest", "e1071", "git2r", "glue", "httpuv", "igraph", "ipred", "iterators", "kernlab", "lava", "openssl", "pillar", "pkgconfig", "pls", "questionr", "reticulate", "rlang", "robustbase", "scales", "spData", "spdep", "stringi", "tinytex", "tm", "wordcloud", "yaImpute", "yaml"))
install.packages(c("DALEX", "ModelMetrics", "RCurl", "RcppArmadillo", "blogdown", "broom", "caTools", "cowplot", "digest", "e1071", "git2r", "glue", "httpuv", "igraph", "ipred", "iterators", "kernlab", "lava", "openssl", "pillar", "pkgconfig", "pls", "questionr", "reticulate", "rlang", "robustbase", "scales", "spData", "spdep", "stringi", "tinytex", "tm", "wordcloud", "yaImpute", "yaml"))
install.packages(c("DALEX", "ModelMetrics", "RCurl", "RcppArmadillo", "blogdown", "broom", "caTools", "cowplot", "digest", "e1071", "git2r", "glue", "httpuv", "igraph", "ipred", "iterators", "kernlab", "lava", "openssl", "pillar", "pkgconfig", "pls", "questionr", "reticulate", "rlang", "robustbase", "scales", "spData", "spdep", "stringi", "tinytex", "tm", "wordcloud", "yaImpute", "yaml"))
install.packages(c("DALEX", "ModelMetrics", "RCurl", "RcppArmadillo", "blogdown", "broom", "caTools", "cowplot", "digest", "e1071", "git2r", "glue", "httpuv", "igraph", "ipred", "iterators", "kernlab", "lava", "openssl", "pillar", "pkgconfig", "pls", "questionr", "reticulate", "rlang", "robustbase", "scales", "spData", "spdep", "stringi", "tinytex", "tm", "wordcloud", "yaImpute", "yaml"))
install.packages(c("DALEX", "ModelMetrics", "RCurl", "RcppArmadillo", "blogdown", "broom", "caTools", "cowplot", "digest", "e1071", "git2r", "glue", "httpuv", "igraph", "ipred", "iterators", "kernlab", "lava", "openssl", "pillar", "pkgconfig", "pls", "questionr", "reticulate", "rlang", "robustbase", "scales", "spData", "spdep", "stringi", "tinytex", "tm", "wordcloud", "yaImpute", "yaml"))
#Email in WW.data... but email in MAT...
WW_B <- read.csv("~/gitlab/math-placement/data/WW-data-Assessment-B.csv", header=TRUE)
WW_B <- rename(WW_B, email = Email)
#fill blank emails
WW_B <- mutate(WW_B, email = ifelse(
email != "", as.character(email),
paste0(tolower(FirstName),".",tolower(LastName),"@yotes.collegeofidaho.edu")))
library(dplyr)
library(stringr)
#Email in WW.data... but email in MAT...
WW_B <- read.csv("~/gitlab/math-placement/data/WW-data-Assessment-B.csv", header=TRUE)
WW_B <- rename(WW_B, email = Email)
#fill blank emails
WW_B <- mutate(WW_B, email = ifelse(
email != "", as.character(email),
paste0(tolower(FirstName),".",tolower(LastName),"@yotes.collegeofidaho.edu")))
#Split assess. data by associated course
Fall_Assess_B <- filter(WW_B, Month %in% c("Aug", "Sep"))
Spr_Assess_B <- filter(WW_B, Month %in% c("Oct","Nov","Jan", "Feb"))
write.csv(Fall_Assess_B, "~/gitlab/math-placement/data/Fall_Assess_WW_B.csv", row.names = FALSE)
write.csv(Spr_Assess_B, "~/gitlab/math-placement/data/Spring_Assess_WW_B.csv", row.names = FALSE)
#150
m1501f <- read.csv("~/gitlab/math-placement/data/MAT150-01-F17.csv", header=TRUE)
m1502f <- read.csv("~/gitlab/math-placement/data/MAT150-02-F17.csv", header=TRUE)
m1501s <- read.csv("~/gitlab/math-placement/data/MAT150-01-S18.csv", header=TRUE)
m150f <- rbind.data.frame(m1501f, m1502f)
m150f <- mutate(m150f, email = tolower(email),
Course = str_replace(Course, "MAT-150-[:digit:]{2}","M150"))
m150f <- left_join(m150f, Fall_Assess_B,
by=c("FirstName", "LastName", "email")) %>%
filter(!is.na(Score))
m150s <- mutate(m1501s, email = tolower(email),
Course = str_replace(Course, "MAT-150-[:digit:]{2}","M150"))
m150s <- mutate(m1501s, email = tolower(email),
Course = str_replace(Course, "MAT-150-[:digit:]{2}","M150"))
m150f <- mutate(m150f, email = tolower(email),
Course = str_replace(Course, "MAT-150-[:digit:]{2}","M150"))
m150f <- left_join(m150f, Fall_Assess_B,
by=c("FirstName", "LastName", "email")) %>%
filter(!is.na(Score))
library(dplyr)
library(stringr)
#Email in WW.data... but email in MAT...
WW_B <- read.csv("~/gitlab/math-placement/data/WW-data-Assessment-B.csv", header=TRUE)
WW_B <- rename(WW_B, email = Email)
#fill blank emails
WW_B <- mutate(WW_B, email = ifelse(
email != "", as.character(email),
paste0(tolower(FirstName),".",tolower(LastName),"@yotes.collegeofidaho.edu")))
#Split assess. data by associated course
Fall_Assess_B <- filter(WW_B, Month %in% c("Aug", "Sep"))
Spr_Assess_B <- filter(WW_B, Month %in% c("Oct","Nov","Jan", "Feb"))
write.csv(Fall_Assess_B, "~/gitlab/math-placement/data/Fall_Assess_WW_B.csv", row.names = FALSE)
write.csv(Spr_Assess_B, "~/gitlab/math-placement/data/Spring_Assess_WW_B.csv", row.names = FALSE)
#102
m102f <- read.csv("~/gitlab/math-placement/data/MAT102-F17.csv", header=TRUE)
m102s <- read.csv("~/gitlab/math-placement/data/MAT102-S18.csv", header=TRUE)
m102f <- mutate(m102f, email = tolower(email),
Course = str_replace(Course, "MAT-102-[:digit:]{2}","M102"))
m102s <- mutate(m102s, email = tolower(email),
Course = str_replace(Course, "MAT-102-[:digit:]{2}","M102"))
m102f <- left_join(m102f, Fall_Assess_B,
by=c("FirstName", "LastName", "email")) %>%
filter(!is.na(Score))
m102s <- left_join(m102s, Fall_Assess_B,
by=c("FirstName", "LastName", "email")) %>%
filter(!is.na(Score))
m102 <- rbind.data.frame(m175f, m175s) %>% group_by(email, SemesterYear) %>% top_n(1, Score)
m102 <- rbind.data.frame(m102f, m102s) %>% group_by(email, SemesterYear) %>% top_n(1, Score)
write.csv(m102, "~/gitlab/math-placement/data/m102-cleaned.csv")
#150
m1501f <- read.csv("~/gitlab/math-placement/data/MAT150-01-F17.csv", header=TRUE)
m1502f <- read.csv("~/gitlab/math-placement/data/MAT150-02-F17.csv", header=TRUE)
m1501s <- read.csv("~/gitlab/math-placement/data/MAT150-01-S18.csv", header=TRUE)
m150f <- rbind.data.frame(m1501f, m1502f)
m150f <- mutate(m150f, email = tolower(email),
Course = str_replace(Course, "MAT-150-[:digit:]{2}","M150"))
m150f <- left_join(m150f, Fall_Assess_B,
by=c("FirstName", "LastName", "email")) %>%
filter(!is.na(Score))
m150s <- mutate(m1501s, email = tolower(email),
Course = str_replace(Course, "MAT-150-[:digit:]{2}","M150"))
m150s <- left_join(m150s, Spr_Assess_B,
by=c("FirstName", "LastName", "email")) %>%
filter(!is.na(Score))
m150 <- rbind.data.frame(m150f, m150s) %>% group_by(email, SemesterYear) %>% top_n(1, Score)
write.csv(m150, "~/gitlab/math-placement/data/m150-cleaned.csv")
#175
m175f <- read.csv("~/gitlab/math-placement/data/MAT175-01-F17.csv", header=TRUE)
m175s <- read.csv("~/gitlab/math-placement/data/MAT175-01-S18.csv", header=TRUE)
m175f <- mutate(m175f, email = tolower(email),
Course = str_replace(Course, "MAT-175-[:digit:]{2}","M175"))
m175s <- mutate(m175s, email = tolower(email),
Course = str_replace(Course, "MAT-175-[:digit:]{2}","M175"))
m175f <- left_join(m175f, Fall_Assess_B,
by=c("FirstName", "LastName", "email")) %>%
filter(!is.na(Score))
#175
m175f <- read.csv("~/gitlab/math-placement/data/MAT175-01_F17.csv", header=TRUE)
m175f <- mutate(m175f, email = tolower(email),
Course = str_replace(Course, "MAT-175-[:digit:]{2}","M175"))
m175s <- mutate(m175s, email = tolower(email),
Course = str_replace(Course, "MAT-175-[:digit:]{2}","M175"))
m175f <- left_join(m175f, Fall_Assess_B,
by=c("FirstName", "LastName", "email")) %>%
filter(!is.na(Score))
m175s <- left_join(m175s, Fall_Assess_B,
by=c("FirstName", "LastName", "email")) %>%
filter(!is.na(Score))
m175 <- rbind.data.frame(m175f, m175s) %>% group_by(email, SemesterYear) %>% top_n(1, Score)
write.csv(m175, "~/gitlab/math-placement/data/m175-cleaned.csv")
View(m102)
View(m102)
View(m150)
View(m175)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message = FALSE, error = FALSE)
library(dplyr)
library(tidyr)
library(ggplot2)
library(stringr)
library(knitr)
library(kableExtra)
library(caret)
my_kable <- function(df){
kable(df,"html", digits = 3) %>%
kable_styling( bootstrap_options =
c("striped", "hover","condensed", "responsive"), full_width=FALSE)
}
m102 <- read.csv("~/gitlab/math-placement/data/m102-cleaned.csv", header=TRUE) %>% rename(FinalAve = Final.Score) %>%
filter(FinalAve > 40) #drop 2 low scores, my students who didn't complete course
m102$NC <- sapply(1:nrow(m102), function(x) sum(str_count(m102[x,16:31], "100")))
m150 <- read.csv("~/gitlab/math-placement/data/m150-cleaned.csv", header=TRUE)
m150$NC <- sapply(1:nrow(m150), function(x) sum(str_count(m150[x,16:31], "100")))
m175 <- read.csv("~/gitlab/math-placement/data/m175-cleaned.csv", header=TRUE)
m175$NC <- sapply(1:nrow(m175), function(x) sum(str_count(m175[x,16:31], "100")))
TRm175pc <- prcomp(select(TRm175, X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16), scale. = TRUE)
set.seed(1234567)
train_idx <- sample(1:length(m175$email), .75*length(m175$email), replace=FALSE)
TRm175 <- m175[train_idx,]
TSTm175 <- m175[-train_idx,]
TRm175 %>% select(X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16) %>% ggpairs(aes(alpha=.3))+ggtitle("Pairwise Plot of Question Results, Math 175 Train")
TRm175pc <- prcomp(select(TRm175, X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16), scale. = TRUE)
