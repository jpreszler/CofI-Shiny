amc <- function(x) {mid <- filter(mhlW,minor==x) %>% select(id) return(filter(mhlW, id %in% mid$id, minorNum=="AddMinor") %>% group_by(minor) %>% summarise(paste0(x,".cnt")=n()))}
amc <- function(x) {mid <- filter(mhlW,minor==x) %>% select(id); return(filter(mhlW, id %in% mid$id, minorNum=="AddMinor") %>% group_by(minor) %>% summarise(paste0(x,".cnt")=n()))}
map(mm, amc)
map_df(mm, amc)
96/8
?map_dfc
map_dfc(mm, amc)
amc <- function(x) {mid <- filter(mhlW,minor==x) %>% select(id) return(filter(mhlW, id %in% mid$id, minorNum=="AddMinor") %>% group_by(minor) %>% summarise(cnt=n())) %>% arrange(desc(cnt))
filter(mhlW, id %in% mid$id, minorNum=="AddMinor") %>%
group_by(minor) %>% summarise(cnt=n())) %>% arrange(desc(cnt))
return(
filter(mhlW, id %in% mid$id, minorNum=="AddMinor") %>%
group_by(minor) %>% summarise(cnt=n()) %>% arrange(desc(cnt))
)
amc <- function(x) {
mid <- filter(mhlW,minor==x) %>% select(id)
return(
filter(mhlW, id %in% mid$id, minorNum=="AddMinor") %>%
group_by(minor) %>% summarise(cnt=n()) %>% arrange(desc(cnt))
)
}
map_dfc(mm, amc)
map(mm, amc)
mm
amc <- function(x) {
mid <- filter(mhlW,minor==x) %>% select(id)
return(
filter(mhlW, id %in% mid$id, minorNum=="AddMinor") %>%
group_by(minor) %>% summarise(maps_minor=x,cnt=n()) %>% arrange(desc(cnt))
)
}
map(mm, amc)
amc <- function(x) {
mid <- filter(mhlW,minor==x) %>% select(id)
return(
filter(mhlW, id %in% mid$id, minorNum=="AddMinor") %>%
mutate(maps_minor=x) %>% group_by(minor) %>%
summarise(cnt=n()) %>% arrange(desc(cnt))
)
}
map(mm, amc)
amc <- function(x) {
mid <- filter(mhlW,minor==x) %>% select(id)
return(
filter(mhlW, id %in% mid$id, minorNum=="AddMinor") %>%
mutate(maps_minor=x) %>% group_by(maps_minor, minor) %>%
summarise(cnt=n()) %>% arrange(desc(cnt))
)
}
map(mm, amc)
mhLong %>% filter(minor %in% mm) %>% group_by(id) %>% summarise(cnt=n())
mhLong %>% filter(minor %in% mm) %>% group_by(id) %>% summarise(cnt=n()) %>% arrange(desc(cnt))
tmm <- c(2,16,29,55,58,64,91,95)
filter(minorHistC, id %in% tmm)
mhLong %>% filter(minor %in% mm, id %in% tmm) %>% arrange(id)
filter(minorHistC, id %in% tmm)
sum(is.na(minorHistC$Major2))
View(mhlW)
mhlW %>% filter(minorNum=="Minor1") %>% group_by(minor, major) %>% summarise(cnt=n())
mhlW %>% filter(minorNum=="Minor1") %>% group_by(minor, major) %>% summarise(cnt=n()) %>% arrange(desc(cnt))
devtools::install_github("nicolewhite/RNeo4j")
library(RNeo4j)
g <- startGraph("http://localhost:7474/db/data/")
g <- startGraph("http://localhost:7474/db/data/", user="",password = "maps")
g <- startGraph("http://localhost:7474/", user="neo4j",password = "maps")
g
q <- 'MATCH (c:Course) WHERE c.number="275"'
cypher(g,q)
g <- startGraph("http://localhost:7474/db/data", user="neo4j",password = "maps")
g
cypher(g,q)
q <- 'MATCH (c:Course) WHERE c.number="275" RETURN c'
cypher(g,q)
q <- 'MATCH (c:Course) WHERE c.number="275" RETURN c.id'
cypher(g,q)
q <- 'MATCH (c:Course)-[*]->(m:Minor) WHERE m.name="Applied Math" RETURN count(c.id)'
cypher(g,q)
#data is already loaded into database using load-data.cypher
gdb <- graph("http://localhost:7474/db/data", user="neo4j", password = "maps") #only the password is DB specific here
typeof(cypher(g,q))
cypher(g,q)
as.data.frame(cypher(g,q))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyr)
library(purrr)
library(knitr)
library(ggplot2)
library(igraph)
devtools::install_github("nicolewhite/RNeo4j")
library(RNeo4j)
#data is already loaded into database using load-data.cypher
gdb <- startGraph("http://localhost:7474/db/data", user="neo4j", password = "maps") #only the password is DB specific here
query <- 'MATCH (c:Course)-[p:Part_Of{type:"option"}]->(m:Minor) RETURN m.name, p.name'
gq <- cypher(gdb,query) %>% as.data.frame()
names(gq) <- c("Minor","OptName")
View(gq)
#data is already loaded into database using load-data.cypher
gdb <- startGraph("http://localhost:7474/db/data", user="neo4j", password = "maps") #only the password is DB specific here
gq <- cypher(gdb,query) %>% as.data.frame()
names(gq) <- c("Minor","OptName")
minors <- read.csv("~/github-web/peak-neo4j/maps_demo/data/import/minors.csv", stringsAsFactors=TRUE)
View(minors)
labs <- filter(minors, other=="LAB")
View(labs)
minors <- filter(minors, other!="LAB")
write.csv(labs, file="/home/jpreszler/github-web/peak-neo4j/maps_demo/data/import/lab-req.csv", row.names = FALSE)
write.csv(minors, file="/home/jpreszler/github-web/peak-neo4j/maps_demo/data/import/minor-no-lab.csv", row.names = FALSE)
devtools::install_github("dataknowledge/visNetwork")
devtools::install_github("datastorm-open/visNetwork")
github_pat
devtools::github_pat(1)
devtools::github_pat()
library("visNetwork")
install.packages("visNetwork")
library(visNetwork)
MinorNodeQ <- 'MATCH (m:Minor {name:"Applied Math"}) RETURN m.name AS id, m.name AS label, LABELS(m)[0] AS group'
CourseNodeQ <- 'MATCH (m:Course)-[*]->(min:Minor{name:"Applied Math"}) RETURN m.id AS id, m.id AS label, LABELS(m)[0] AS group'
nodes <- rbind.data.frame(cypher(gdb, MinorNodeQ), cypher(gdb, CourseNodeQ))
edgeQ <- 'MATCH (c:Course)-[r*]->(m:Minor {name:"Applied Math"}) RETURN c.id AS from, m.name AS to, TYPE(r[0]) AS label'
edges <- cypher(gdb, edgeQ)
visNetwork(nodes, edges)
View(nodes)
edgeSatQ <- 'MATCH (c:Course)-[r:Satisfies]->(co:Component)-[:Part_Of]->(m:Minor {name:"Applied Math"}) RETURN c.id AS from, co.name AS to, TYPE(r) AS label'
edgePOQ <- 'MATCH (c:Component)-[r:Part_Of]->(m:Minor {name:"Applied Math"}) RETURN c.id AS from, m.name AS to, TYPE(r) AS label'
edges <- rbind.data.frame(cypher(gdb, edgeSatQ),cypher(gdb, edgePOQ))
View(edges)
View(nodes)
View(minors)
View(minors)
##DB Connection
library(RNeo4j)
#data is already loaded into database using load-data.cypher
gdb <- startGraph("http://localhost:7474/db/data", user="neo4j", password = "maps") #only the password is DB specific here
q1<-'LOAD CSV WITH HEADERS FROM "file:///maps_minor_course_nodes.csv" AS course CREATE (:Course {name:course.name, id:course.id,url:course.url,description:course.description, number:course.number, subject:course.sub, minCredits:course.min_credits, maxCredits:course.max_credits})'
q2<-'CREATE INDEX ON :Course(id)'
q3<-'LOAD CSV WITH HEADERS FROM "file:///majors.csv" AS major CREATE (:Major {name:major.name})'
q4<-'CREATE INDEX ON :Major(name)'
q5<-'LOAD CSV WITH HEADERS FROM "file:///majComp-math.csv" AS mc CREATE (:Component {name:mc.name, major:"Mathematics"})'
q6<-'LOAD CSV WITH HEADERS FROM "file:///majComp-mathcs.csv" AS mc CREATE (:Component {name:mc.name, major:"Math/CS"})'
q7<-'LOAD CSV WITH HEADERS FROM "file:///majComp-phys.csv" AS mc CREATE (:Component {name:mc.name, major:"Math/Physics"})'
q8<-'CREATE INDEX ON :Component(name)'
q9<-'MATCH (c:Component), (m:Major) WHERE c.major=m.name CREATE (c)-[r:Part_Of]->(m)'
q10<-'LOAD CSV WITH HEADERS FROM "file:///mathReq.csv" AS mmr MERGE (c:Course {id:mmr.course}) MERGE (mc:Component {name:mmr.component}) MERGE (c)-[s:Satisfies {type:mmr.type}]->(mc)'
q11<-'LOAD CSV WITH HEADERS FROM "file:///mathcsReq.csv" AS mmr MERGE (c:Course {id:mmr.course}) MERGE (mc:Component {name:mmr.component}) MERGE (c)-[s:Satisfies {type:mmr.type}]->(mc)'
q12<-'LOAD CSV WITH HEADERS FROM "file:///mathphysReq.csv" AS mmr MERGE (c:Course {id:mmr.course}) MERGE (mc:Component {name:mmr.component}) MERGE (c)-[s:Satisfies {type:mmr.type}]->(mc)'
q13<-'LOAD CSV WITH HEADERS FROM "file:///minor-no-lab.csv" AS minor MERGE (c:Course {id:minor.course}) MERGE (m:Minor {name:minor.minor}) MERGE (cluster:Component {name:minor.other, minor:minor.minor}) MERGE (c)-[p:Satisfies {type:minor.type}]->(cluster) MERGE (cluster)-[s:Part_Of]->(m)'
q14<-'CREATE (:Component{name:"Lab", desc: "Misc. Lab requirement for Applied Math, CSD, and Math minors"})'
q15<-'CREATE (:Course {name:"Approved Labs", id:"AppLab"})'
q16<-'MATCH (c:Course{id:"AppLab"}), (l:Component{name:"Lab"}), (m:Minor) WHERE m.name="Mathematics" OR m.name="Applied Math" OR m.name="Computer Studies" MERGE (l)-[:Part_Of]->(m) MERGE (c)-[:Satisfies {type:"option"}]->(l)'
q17<-'LOAD CSV WITH HEADERS FROM "file:///minorPrereq.csv" AS pre MATCH (c:Course), (s:Course) WHERE c.id=pre.id1 AND s.id=pre.id2 MERGE (s)-[:Prerequisite]->(c)'
queries <- c(q1,q2,q3,q4,q5,q6,q7,q8,q9,q10,q11,q12,q13,q14,q15,q16,q17)
library(purrr)
map(queries, function(x) cypher(gdb,x))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyr)
library(purrr)
library(knitr)
library(ggplot2)
library(igraph)
library(RNeo4j)
#data is already loaded into database
gdb <- startGraph("http://localhost:7474/db/data", user="neo4j", password = "maps") #only the password is DB specific here
#data is already loaded into database
gdb <- startGraph("http://localhost:7474/db/data", user="neo4j", password = "maps") #only the password is DB specific here
cypher(gdb, "CALL db.schema()")
devtools::install_github("yihui/xaringan")
head(diamonds)
library(ggplot2)
head(diamonds)
unique(diamonds$cut)
unique(diamonds$color)
##DB Connection
library(RNeo4j)
#data is already loaded into database using load-data.cypher
gdb <- startGraph("http://localhost:7474/db/data", user="neo4j", password = "maps") #only the password is DB specific here
q1<-'LOAD CSV WITH HEADERS FROM "file:///maps_minor_course_nodes.csv" AS course CREATE (:Course {name:course.name, id:course.id,url:course.url,description:course.description, number:course.number, subject:course.sub, minCredits:course.min_credits, maxCredits:course.max_credits})'
q2<-'CREATE INDEX ON :Course(id)'
q3<-'LOAD CSV WITH HEADERS FROM "file:///majors.csv" AS major CREATE (:Major {name:major.name})'
q4<-'CREATE INDEX ON :Major(name)'
q5<-'LOAD CSV WITH HEADERS FROM "file:///majComp-math.csv" AS mc CREATE (:Component {name:mc.name, major:"Mathematics"})'
q6<-'LOAD CSV WITH HEADERS FROM "file:///majComp-mathcs.csv" AS mc CREATE (:Component {name:mc.name, major:"Math/CS"})'
q7<-'LOAD CSV WITH HEADERS FROM "file:///majComp-phys.csv" AS mc CREATE (:Component {name:mc.name, major:"Math/Physics"})'
q8<-'CREATE INDEX ON :Component(name)'
q9<-'MATCH (c:Component), (m:Major) WHERE c.major=m.name MERGE (c)-[r:Part_Of]->(m)'
q10<-'LOAD CSV WITH HEADERS FROM "file:///mathReq.csv" AS mmr MERGE (c:Course {id:mmr.course}) MERGE (mc:Component {name:mmr.component, major:"Mathematics"}) MERGE (c)-[s:Satisfies {type:mmr.type}]->(mc)'
q11<-'LOAD CSV WITH HEADERS FROM "file:///mathcsReq.csv" AS mmr MERGE (c:Course {id:mmr.course}) MERGE (mc:Component {name:mmr.component, major:"Math/CS"}) MERGE (c)-[s:Satisfies {type:mmr.type}]->(mc)'
q12<-'LOAD CSV WITH HEADERS FROM "file:///mathphysReq.csv" AS mmr MERGE (c:Course {id:mmr.course}) MERGE (mc:Component {name:mmr.component, major:"Math/Physics"}) MERGE (c)-[s:Satisfies {type:mmr.type}]->(mc)'
q13<-'LOAD CSV WITH HEADERS FROM "file:///minor-no-lab.csv" AS minor MERGE (c:Course {id:minor.course}) MERGE (m:Minor {name:minor.minor}) MERGE (cluster:Component {name:minor.other, minor:minor.minor}) MERGE (c)-[p:Satisfies {type:minor.type}]->(cluster) MERGE (cluster)-[s:Part_Of]->(m)'
q14<-'CREATE (:Component{name:"Lab", desc: "Misc. Lab requirement for Applied Math, CSD, and Math minors"})'
q15<-'CREATE (:Course {name:"Approved Labs", id:"AppLab"})'
q16<-'MATCH (c:Course{id:"AppLab"}), (l:Component{name:"Lab"}), (m:Minor) WHERE m.name="Mathematics" OR m.name="Applied Math" OR m.name="Computer Studies" MERGE (l)-[:Part_Of]->(m) MERGE (c)-[:Satisfies {type:"option"}]->(l)'
q17<-'LOAD CSV WITH HEADERS FROM "file:///minorPrereq.csv" AS pre MATCH (c:Course), (s:Course) WHERE c.id=pre.id1 AND s.id=pre.id2 MERGE (s)-[:Prerequisite]->(c)'
queries <- c(q1,q2,q3,q4,q5,q6,q7,q9,q10,q11,q12,q13,q14,q15,q16,q17) #removed q8 for now, major cores where being combined
library(purrr)
map(queries, function(x) cypher(gdb,x))
?pca
??pca
df <- data.frame(id=1:25, method=rep("area2",25))
df <- rbind.data.frame(df, data.frame(id=1:25, method=rep("area3",25)))
df <- mutate(samp = ifelse(method=="area2", round(rnorm(5,50,20),0), round(runif(5,1,100),0)))
library(dplyr)
df <- mutate(samp = ifelse(method=="area2", round(rnorm(5,50,20),0), round(runif(5,1,100),0)))
df <- mutate(df, samp = ifelse(method=="area2", round(rnorm(5,50,20),0), round(runif(5,1,100),0)))
head(df)
round(rnorm(5,50,20),0)
?dput
df <- mutate(df, samp = ifelse(method=="area2", toString(round(rnorm(5,50,20),0), sep=","), toString(round(runif(5,1,100),0),sep=",")))
head(df)
df <- data.frame(id=1:25, method=rep("area2",25))
df <- rbind.data.frame(df, data.frame(id=1:25, method=rep("area3",25)))
df <- mutate(df, samp = ifelse(method=="area2", toString(round(rnorm(5,50,20),0), sep=";"), toString(round(runif(5,1,100),0),sep=";")))
write.csv(df, file="/home/jpreszler/github-web/CofI-Shiny/BugTownSampleVariation/example.csv", row.names = FALSE)
library(tidyr)
?gather
setwd("~/github-web/CofI-Shiny/BugTownSampleVariation/")
bugSampDF <- read.csv("example.csv", header=TRUE) %>%
separate(samp, into = paste0("n",1:5), sep=";", remove=TRUE) %>%
gather(key="n",value="Apt", -c(id,method) )
View(df)
View(bugSampDF)
df <- read.csv("example.csv", header = TRUE)
View(df)
df <- data.frame(id=1:25, method=rep("area2",25), samp = toString(round(rnorm(5, 50, 20),0),sep=";"))
df <- rbind.data.frame(df, data.frame(id=1:25, method=rep("area3",25), samp = toString(round(runif(5,1,100),0),sep=";")))
View(df)
df <- data.frame(id=1:25, method=rep("area2",25), samp = rep(toString(round(rnorm(5, 50, 20),0),sep=";")),25)
df <- rbind.data.frame(df, data.frame(id=1:25, method=rep("area3",25), samp = rep(toString(round(runif(5,1,100),0),sep=";"),25)))
View(df)
df <- data.frame(id=1:25, method=rep("area2",25), samp = rep(toString(round(rnorm(5, 50, 20),0),sep=";"),25))
df <- rbind.data.frame(df, data.frame(id=1:25, method=rep("area3",25), samp = rep(toString(round(runif(5,1,100),0),sep=";"),25)))
View(df)
sapply(1:25, round(rnorm(5,50,20),0))
sapply(1:25, function(x) toString(round(rnorm(5,50,20),0)))
df <- data.frame(id=1:25, method=rep("area2",25), samp = sapply(1:25, function(x) toString(round(rnorm(5,50,20),0))))
df <- rbind.data.frame(df, data.frame(id=1:25, method=rep("area3",25), samp = sapply(1:25, function(x) toString(round(runif(5,1,100),0)))))
View(df)
write.csv(df, file = "example.csv")
write.csv(df, file = "example.csv", row.names = FALSE)
bugSampDF <- read.csv("example.csv", header=TRUE) %>%
separate(samp, into = paste0("n",1:5), sep=",", remove=TRUE) %>%
gather(key="n",value="Apt", -c(id,method) )
bugSampDF <- read.csv("example.csv", header=TRUE) %>%
separate(samp, into = paste0("n",1:5), sep=",", remove=TRUE) %>%
gather(key="n",value="Apt", -c(id,method) ) %>%
select(-n)
students <- length(unique(bugSampDF$id))
sampCntDF <- bugSampDF %>% group_by(Apt) %>%
summarise(method2 = sum(method=="area2"), method3 = sum(method=="area3"))
left_join(bugtownDF, sampCntDF) %>%
ggplot(aes(x=Xcoord, y=Ycoord, alpha=(method2+method3)/students))+
geom_tile(aes(col=ifelse(method2>method3, "red","blue")), fill="white", size=1)+
geom_text(aes(label=apartNumber))+theme_void()
#get data
bugtownDF <- read.csv("data.org", sep="|", header=TRUE, strip.white = TRUE)
#clean
bugtownDF <- filter(bugtownDF, !is.na(apartNumber))
left_join(bugtownDF, sampCntDF) %>%
ggplot(aes(x=Xcoord, y=Ycoord, alpha=(method2+method3)/students))+
geom_tile(aes(col=ifelse(method2>method3, "red","blue")), fill="white", size=1)+
geom_text(aes(label=apartNumber))+theme_void()
View(bugtownDF)
?left_join
left_join(bugtownDF, sampCntDF, by=c("aptNumber" = "Apt")) %>%
ggplot(aes(x=Xcoord, y=Ycoord, alpha=(method2+method3)/students))+
geom_tile(aes(col=ifelse(method2>method3, "red","blue")), fill="white", size=1)+
geom_text(aes(label=apartNumber))+theme_void()
left_join(bugtownDF, sampCntDF, by=c("apartNumber" = "Apt")) %>%
ggplot(aes(x=Xcoord, y=Ycoord, alpha=(method2+method3)/students))+
geom_tile(aes(col=ifelse(method2>method3, "red","blue")), fill="white", size=1)+
geom_text(aes(label=apartNumber))+theme_void()
bugSampDF$Apt <- as.numeric(bugSampDF$Apt)
left_join(bugtownDF, sampCntDF, by=c("apartNumber" = "Apt")) %>%
ggplot(aes(x=Xcoord, y=Ycoord, alpha=(method2+method3)/students))+
geom_tile(aes(col=ifelse(method2>method3, "red","blue")), fill="white", size=1)+
geom_text(aes(label=apartNumber))+theme_void()
students <- length(unique(bugSampDF$id))
sampCntDF <- bugSampDF %>% group_by(Apt) %>%
summarise(method2 = sum(method=="area2"), method3 = sum(method=="area3"))
left_join(bugtownDF, sampCntDF, by=c("apartNumber" = "Apt")) %>%
ggplot(aes(x=Xcoord, y=Ycoord, alpha=(method2+method3)/students))+
geom_tile(aes(col=ifelse(method2>method3, "red","blue")), fill="white", size=1)+
geom_text(aes(label=apartNumber))+theme_void()
library(ggplot2)
left_join(bugtownDF, sampCntDF, by=c("apartNumber" = "Apt")) %>%
ggplot(aes(x=Xcoord, y=Ycoord, alpha=(method2+method3)/students))+
geom_tile(aes(col=ifelse(method2>method3, "red","blue")), fill="white", size=1)+
geom_text(aes(label=apartNumber))+theme_void()
left_join(bugtownDF, sampCntDF, by=c("apartNumber" = "Apt")) %>%
ggplot(aes(x=Xcoord, y=Ycoord)+
geom_tile(aes(col=ifelse(method2>method3, "red","blue"), alpha=(method2+method3)/students)), fill="white", size=1)+
geom_text(aes(label=apartNumber))+theme_void()
left_join(bugtownDF, sampCntDF, by=c("apartNumber" = "Apt")) %>%
ggplot(aes(x=Xcoord, y=Ycoord)+
geom_tile(aes(col=ifelse(method2>method3, "red","blue"), alpha=(method2+method3)/students)), fill="white", size=1)+
geom_text(aes(label=apartNumber))+theme_void()
left_join(bugtownDF, sampCntDF, by=c("apartNumber" = "Apt")) %>%
ggplot(aes(x=Xcoord, y=Ycoord)+
geom_tile(aes(col=ifelse(method2>method3, "red","blue"), alpha=(method2+method3)/students)), fill="white", size=1)+
geom_text(aes(label=apartNumber))+theme_void()
left_join(bugtownDF, sampCntDF, by=c("apartNumber" = "Apt")) %>%
ggplot(aes(x=Xcoord, y=Ycoord, col=ifelse(method2>method3, "red","blue"), alpha=(method2+method3)/students))+
geom_tile(fill="white", size=1)+
geom_text(aes(label=apartNumber))+theme_void()
left_join(bugtownDF, sampCntDF, by=c("apartNumber" = "Apt")) %>%
ggplot(aes(x=Xcoord, y=Ycoord, col=max, alpha=(method2+method3)/students))+
geom_tile(fill="white", size=1)+
geom_text(aes(label=apartNumber))+theme_void()
left_join(bugtownDF, sampCntDF, by=c("apartNumber" = "Apt")) %>%
ggplot(aes(x=Xcoord, y=Ycoord, col=maxMeth, alpha=(method2+method3)/students))+
geom_tile(fill="white", size=1)+
geom_text(aes(label=apartNumber))+theme_void()
sampCntDF <- bugSampDF %>% group_by(Apt) %>%
summarise(method2 = sum(method=="area2"), method3 = sum(method=="area3"), maxMeth=as.factor(ifelse(method2>method3, "Method 2", "Method 3")))
left_join(bugtownDF, sampCntDF, by=c("apartNumber" = "Apt")) %>%
ggplot(aes(x=Xcoord, y=Ycoord, col=maxMeth, alpha=(method2+method3)/students))+
geom_tile(fill="white", size=1)+
geom_text(aes(label=apartNumber))+theme_void()
left_join(bugtownDF, sampCntDF, by=c("apartNumber" = "Apt")) %>%
ggplot(aes(x=Xcoord, y=Ycoord, fill=maxMeth, alpha=(method2+method3)/students))+
geom_tile(size=1)+
geom_text(aes(label=apartNumber), col="black")+theme_void()
sampCntDF <- bugSampDF %>% group_by(Apt) %>%
summarise(method2 = sum(method=="area2"), method3 = sum(method=="area3"),
maxMeth=as.factor(ifelse(method2>method3, "Method 2", "Method 3")),
pctSelect = (method2+method3)/students)
left_join(bugtownDF, sampCntDF, by=c("apartNumber" = "Apt")) %>%
ggplot(aes(x=Xcoord, y=Ycoord, fill=maxMeth, alpha=(method2+method3)/students))+
geom_tile(size=1)+
geom_text(aes(label=apartNumber))+theme_void()
left_join(bugtownDF, sampCntDF, by=c("apartNumber" = "Apt")) %>%
ggplot(aes(x=Xcoord, y=Ycoord, fill=maxMeth, alpha=pctSelected))+
geom_tile(size=1)+
geom_text(aes(label=apartNumber))+theme_void()
left_join(bugtownDF, sampCntDF, by=c("apartNumber" = "Apt")) %>%
ggplot(aes(x=Xcoord, y=Ycoord, fill=maxMeth, alpha=pctSelect))+
geom_tile(size=1)+
geom_text(aes(label=apartNumber))+theme_void()
View(sampCntDF)
sampCntDF <- bugSampDF %>% group_by(Apt) %>%
summarise(method2 = sum(method=="area2"), method3 = sum(method=="area3"),
maxMeth=as.factor(ifelse(method2>method3, "Method 2", "Method 3")),
Select = 3*(method2+method3)/students)
left_join(bugtownDF, sampCntDF, by=c("apartNumber" = "Apt")) %>%
ggplot(aes(x=Xcoord, y=Ycoord, fill=maxMeth, alpha=pctSelect))+
geom_tile(size=1)+
geom_text(aes(label=apartNumber))+theme_void()
left_join(bugtownDF, sampCntDF, by=c("apartNumber" = "Apt")) %>%
ggplot(aes(x=Xcoord, y=Ycoord, fill=maxMeth, alpha=Select))+
geom_tile(size=1)+
geom_text(aes(label=apartNumber))+theme_void()
?tabPanel
?shiny::tabPanel
shiny::runApp('~/github-web/CofI-Shiny/Random_Rectangles')
library(stringr)
?str_detect
runApp('~/github-web/CofI-Shiny/Random_Rectangles')
install.packages("shinyjs")
runApp('~/github-web/CofI-Shiny/Random_Rectangles')
?all
a2 = "string"
a3 = "1,2,3,4,5"
check <- function(x) {
x<- str_extract_all(x,"[:space:]+")
str_detect(x, "[:digit:]+,[:digit:]+,[:digit:]+,[:digit:]+,[:digit:]")
}
vapply(c(a2,a3),check)
vapply(c(a2,a3),check, logical(1))
check(a3)
str_count(a3,",")
str_count(a3,"[:digit:]")
str_count(a3,"[:digit:],")
str_count(a3,"[:digit:]+,")
str_count(a3,"[:digit:]+,[:digit:]+,[:digit:]+,[:digit:]+,[:digit:]+")
str_count(a2,"[:digit:]+,[:digit:]+,[:digit:]+,[:digit:]+,[:digit:]+")
runApp('~/github-web/CofI-Shiny/Random_Rectangles')
check <- function(x) {
x<- str_extract_all(x,"[:space:]+")
sc<-str_count(x, "[:digit:]+,[:digit:]+,[:digit:]+,[:digit:]+,[:digit:]+")
ifelse(sc==1, return(TRUE), return(FALSE))
check(a2)
)
}
check <- function(x) {
x<- str_extract_all(x,"[:space:]+")
sc<-str_count(x, "[:digit:]+,[:digit:]+,[:digit:]+,[:digit:]+,[:digit:]+")
ifelse(sc==1, return(TRUE), return(FALSE))}
check(a2)
check(a3)
check("hello")
str_extract_all(a2)
str_extract_all(a2, "[:space:]")
check <- function(x) {
x<- str_extract_all(x,"[:space:]+")[[1]]
sc<-str_count(x, "[:digit:]+,[:digit:]+,[:digit:]+,[:digit:]+,[:digit:]+")
ifelse(sc==1, return(TRUE), return(FALSE))}
check("hello")
check(a3)
check <- function(x) {
sc<-str_count(x, "[:digit:]+,[:digit:]+,[:digit:]+,[:digit:]+,[:digit:]+")
ifelse(sc==1, return(TRUE), return(FALSE))}
check(a3)
check("hello")
runApp('~/github-web/CofI-Shiny/Random_Rectangles')
View(df)
install.packages("googlesheets")
setwd("~/github-web/CofI-Shiny/Random_Rectangles/")
library(googlesheets)
tok <- gs_auth()
tok
sheet <- gs_read("https://docs.google.com/spreadsheets/d/e/2PACX-1vQLSAP-OGBPlfgry23DIqPWyQEIRVbM8_pfyh47vM6TAeugetQy9rRU1eK9swQoxv6YnZDsqYTXZ0un/pubhtml")
gs_ls()
ex <- gs_title("Rand_Rect_Submission")
ex <- gs_url("https://docs.google.com/spreadsheets/d/e/2PACX-1vQLSAP-OGBPlfgry23DIqPWyQEIRVbM8_pfyh47vM6TAeugetQy9rRU1eK9swQoxv6YnZDsqYTXZ0un/pubhtml")
gs_user()
gs_auth()
gs_auth()
gs_auth(new_user = TRUE)
library(googlesheets)
options(httr_oob_default=TRUE)
gs_auth(new_user = TRUE)
library(httr)
file.remove('.httr-oauth')
oauth2.0_token(
endpoint = oauth_endpoints("google"),
app = oauth_app(
"google",
key = getOption("googlesheets.client_id"),
secret = getOption("googlesheets.client_secret")
),
scope = c(
"https://spreadsheets.google.com/feeds",
"https://www.googleapis.com/auth/drive"),
use_oob = TRUE,
cache = TRUE
)
library(httr)
file.remove('.httr-oauth')
oauth2.0_token(
endpoint = oauth_endpoints("google"),
app = oauth_app(
"google",
key = getOption("googlesheets.client_id"),
secret = getOption("googlesheets.client_secret")
),
scope = c(
"https://spreadsheets.google.com/feeds",
"https://www.googleapis.com/auth/drive"),
use_oob = TRUE,
cache = TRUE
)
detach("package:httpuv", unload=TRUE)
library("httpuv", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.5")
detach("package:httpuv", unload=TRUE)
detach("package:shiny", unload=TRUE)
gs_auth(new_user = TRUE)
gs_ls()
install.packages(c("ALEPlot", "CVST", "DALEX", "RcppRoll", "blogdown", "broom", "caret", "ddalpha", "devtools", "dplyr", "ggplot2", "ggpubr", "git2r", "gmodels", "gtools", "haven", "highr", "httpuv", "kableExtra", "labelled", "later", "lava", "munsell", "mvtnorm", "nycflights13", "pillar", "purrr", "recipes", "rlang", "robustbase", "sp", "spData", "tinytex", "tm", "utf8", "wordcloud2", "xaringan", "xfun"))
install.packages(c("ALEPlot", "CVST", "DALEX", "RcppRoll", "blogdown", "broom", "caret", "ddalpha", "devtools", "dplyr", "ggplot2", "ggpubr", "git2r", "gmodels", "gtools", "haven", "highr", "httpuv", "kableExtra", "labelled", "later", "lava", "munsell", "mvtnorm", "nycflights13", "pillar", "purrr", "recipes", "rlang", "robustbase", "sp", "spData", "tinytex", "tm", "utf8", "wordcloud2", "xaringan", "xfun"))
install.packages(c("ALEPlot", "CVST", "DALEX", "RcppRoll", "blogdown", "broom", "caret", "ddalpha", "devtools", "dplyr", "ggplot2", "ggpubr", "git2r", "gmodels", "gtools", "haven", "highr", "httpuv", "kableExtra", "labelled", "later", "lava", "munsell", "mvtnorm", "nycflights13", "pillar", "purrr", "recipes", "rlang", "robustbase", "sp", "spData", "tinytex", "tm", "utf8", "wordcloud2", "xaringan", "xfun"))
install.packages(c("ALEPlot", "CVST", "DALEX", "RcppRoll", "blogdown", "broom", "caret", "ddalpha", "devtools", "dplyr", "ggplot2", "ggpubr", "git2r", "gmodels", "gtools", "haven", "highr", "httpuv", "kableExtra", "labelled", "later", "lava", "munsell", "mvtnorm", "nycflights13", "pillar", "purrr", "recipes", "rlang", "robustbase", "sp", "spData", "tinytex", "tm", "utf8", "wordcloud2", "xaringan", "xfun"))
install.packages(c("ALEPlot", "CVST", "DALEX", "RcppRoll", "blogdown", "broom", "caret", "ddalpha", "devtools", "dplyr", "ggplot2", "ggpubr", "git2r", "gmodels", "gtools", "haven", "highr", "httpuv", "kableExtra", "labelled", "later", "lava", "munsell", "mvtnorm", "nycflights13", "pillar", "purrr", "recipes", "rlang", "robustbase", "sp", "spData", "tinytex", "tm", "utf8", "wordcloud2", "xaringan", "xfun"))
gs_auth(new_user = TRUE)
library(googlesheets)
gs_auth(new_user = TRUE)
getOption("browser")
op <- options(browser = "/usr/bin/firefox")
gs_auth()
gs_ls
ex <- gs_url("https://docs.google.com/spreadsheets/d/1Q_DsqB1roB2OJyAhlqaEMOJ6Qa_lYKZa3QUNn2BHUno/edit?usp=sharing")
shiny_token <- gs_auth()
saveRDS(shiny_token, "shiny_token.rds")
ex$sheet_key
?gs_add_row
shiny::runApp()
library(ggplot2)
shiny::runApp()
runApp('~/github-web/CofI-Shiny/BugTownSampleVariation')
runApp('~/github-web/CofI-Shiny/BugTownSampleVariation')
runApp()
runApp('~/github-web/CofI-Shiny/BugTownSampleVariation')
runApp('~/github-web/CofI-Shiny/BugTownSampleVariation')
runApp()
?eventReactive
runApp()
runApp('~/github-web/CofI-Shiny/BugTownSampleVariation')
df <- data.frame(id=1:500, method=rep("area2",500),
samp = sapply(1:500, function(x)
toString(round(rnorm(5,50,20),0))))
df <- rbind.data.frame(df, data.frame(id=1:500,
method=rep("area3",500),
samp = sapply(1:500, function(x)
toString(round(runif(5,1,100),0)))))
write.csv(df, file="~/github-web/CofI-Shiny/BugTownSampleVariation/example.csv", row.names = FALSE)
runApp('~/github-web/CofI-Shiny/BugTownSampleVariation')
runApp('~/github-web/CofI-Shiny/BugTownSampleVariation')
?join
runApp('~/github-web/CofI-Shiny/BugTownSampleVariation')
runApp('~/github-web/CofI-Shiny/BugTownSampleVariation')
df <- data.frame(id=1:500, method=rep("method2",500),
samp = sapply(1:500, function(x)
toString(round(rnorm(5,50,20),0))))
df <- rbind.data.frame(df, data.frame(id=1:500,
method=rep("method3",500),
samp = sapply(1:500, function(x)
toString(round(runif(5,1,100),0)))))
write.csv(df, file = "~/github-web/CofI-Shiny/BugTownSampleVariation/example.csv", row.names = FALSE)
runApp('~/github-web/CofI-Shiny/BugTownSampleVariation')
runApp()
56000*.07
3920*2
